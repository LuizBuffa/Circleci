version: 2
jobs:
  one:
    docker:
      - image: circleci/ruby:2.4.1
    steps:
      - checkout
      - run: echo "A first hello"
      - run: mkdir -p my_workspace
      - run: echo "Trying out workspaces" > my_workspace/echo-output
      - persist_to_workspace:
          # Must be an absolute path, or relative patdfdfdfh from working_directory
          root: my_workspace
          # Must be relative path from root
          paths:
            - echo-output
      - deploy:
          name: Build and push Docker image
          command: |
            docker build -t circleci/cci-demo-docker:$TAG .
            docker login -u simbioseuser -p ${DOCKER_HUB_PASS}
            docker pull simbioseventures/zookeeper:infra
  two:
    docker:
      - image: simbioseventures/zookeeper:infra
    steps:
      - checkout
      - run:
          name: Install Docker Compose
          command: |
            set -x
            curl -L https://github.com/docker/compose/releases/download/1.11.2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
            chmod +x /usr/local/bin/docker-compose
      - run:
          name: Build service
          command: make

      - run:
          name: Start container and verify it's working
          command: |
            set -x
            docker-compose up -d
            # docker-compose will start 2 containers, the one with service will be named `contacts`
            # we start another container with curl in the same network as `contacts`, this way we have
            # all exposed ports from `contacts` available on `localhost` in this new container
            #docker run --network container:contacts \
              #appropriate/curl --retry 10 --retry-delay 1 --retry-connrefused http://localhost:8080/contacts/test
      - deploy:
          name: Build and push Docker image
          command: |
            docker build -t circleci/cci-demo-docker:$TAG .
            docker login -u simbioseuser -p ${DOCKER_HUB_PASS}
            docker push simbioseventures/zookeeper:infra
          
workflows:
  version: 2
  one_and_two:
    jobs:
      - one
      - two:
          requires:
            - one
